2025-05-19 15:09:03 [info]: Server is running at port 9000
2025-05-19 15:09:03 [info]: Database connected successfully.
2025-05-19 15:30:23 [info]: Server is running at port 9000
2025-05-19 15:30:23 [info]: Database connected successfully.
2025-05-19 15:33:10 [info]: Server is running at port 9000
2025-05-19 15:33:10 [info]: Database connected successfully.
2025-05-19 15:33:17 [info]: Server is running at port 9000
2025-05-19 15:33:17 [info]: Database connected successfully.
2025-05-19 15:34:47 [info]: Server is running at port 9000
2025-05-19 15:34:47 [info]: Database connected successfully.
2025-05-19 15:34:50 [info]: Server is running at port 9000
2025-05-19 15:34:50 [info]: Database connected successfully.
2025-05-19 15:35:35 [info]: Server is running at port 9000
2025-05-19 15:35:35 [info]: Database connected successfully.
2025-05-19 15:46:59 [info]: Server is running at port 9000
2025-05-19 15:46:59 [info]: Server is running at port 9000
2025-05-19 15:46:59 [info]: Database connected successfully.
2025-05-19 15:46:59 [info]: Database connected successfully.
2025-05-19 15:47:15 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-19 15:53:40 [info]: Server is running at port 9000
2025-05-19 15:53:40 [info]: Database connected successfully.
2025-05-19 15:57:04 [info]: Server is running at port 9000
2025-05-19 15:57:04 [info]: Database connected successfully.
2025-05-19 15:59:25 [info]: Server is running at port 9000
2025-05-19 15:59:25 [info]: Database connected successfully.
2025-05-20 14:18:31 [info]: Server is running at port 9000
2025-05-20 14:18:33 [info]: Database connected successfully.
2025-05-20 14:30:15 [info]: Server is running at port 9000
2025-05-20 14:30:20 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-20 14:30:24 [info]: Server is running at port 9000
2025-05-20 14:30:26 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-20 14:30:46 [info]: Server is running at port 9000
2025-05-20 14:30:48 [info]: Database connected successfully.
2025-05-20 14:31:03 [info]: Server is running at port 9000
2025-05-20 14:31:05 [info]: Database connected successfully.
2025-05-20 14:31:12 [info]: Server is running at port 9000
2025-05-20 14:31:14 [info]: Database connected successfully.
2025-05-20 14:52:35 [info]: Server is running at port 9000
2025-05-20 14:52:37 [info]: Database connected successfully.
2025-05-20 14:53:01 [info]: Server is running at port 9000
2025-05-20 14:53:03 [info]: Database connected successfully.
2025-05-20 14:57:58 [info]: Server is running at port 9000
2025-05-20 14:58:00 [info]: Database connected successfully.
2025-05-20 15:00:23 [info]: Server is running at port 9000
2025-05-20 15:00:24 [info]: Database connected successfully.
2025-05-21 11:29:21 [info]: Server is running at port 9000
2025-05-21 11:29:23 [info]: Database connected successfully.
2025-05-21 14:55:44 [info]: Server is running at port 9000
2025-05-21 14:55:46 [info]: Database connected successfully.
2025-05-21 15:59:56 [info]: Server is running at port 9000
2025-05-21 15:59:57 [info]: Database connected successfully.
2025-05-21 16:10:37 [info]: Server is running at port 9000
2025-05-21 16:10:41 [info]: Server is running at port 9000
2025-05-21 16:10:46 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-21 16:11:19 [info]: Server is running at port 9000
2025-05-21 16:11:21 [info]: Database connected successfully.
2025-05-21 16:11:35 [info]: Server is running at port 9000
2025-05-21 16:11:37 [info]: Database connected successfully.
2025-05-21 16:11:48 [info]: Server is running at port 9000
2025-05-21 16:11:52 [info]: Server is running at port 9000
2025-05-21 16:11:54 [info]: Database connected successfully.
2025-05-21 16:13:44 [info]: Server is running at port 9000
2025-05-21 16:13:45 [info]: Database connected successfully.
2025-05-21 16:14:40 [info]: Server is running at port 9000
2025-05-21 16:14:41 [info]: Database connected successfully.
2025-05-21 16:14:47 [info]: Server is running at port 9000
2025-05-21 16:14:48 [info]: Database connected successfully.
2025-05-21 16:14:58 [info]: Server is running at port 9000
2025-05-21 16:15:00 [info]: Database connected successfully.
2025-05-21 16:15:09 [info]: Server is running at port 9000
2025-05-21 16:15:12 [info]: Server is running at port 9000
2025-05-21 16:15:14 [info]: Database connected successfully.
2025-05-21 16:15:19 [info]: Server is running at port 9000
2025-05-21 16:15:21 [info]: Database connected successfully.
2025-05-21 16:15:58 [info]: Server is running at port 9000
2025-05-21 16:15:59 [info]: Database connected successfully.
2025-05-21 16:16:14 [info]: Server is running at port 9000
2025-05-21 16:16:17 [info]: Server is running at port 9000
2025-05-21 16:16:19 [info]: Database connected successfully.
2025-05-21 16:43:52 [info]: Server is running at port 9000
2025-05-21 16:43:54 [info]: Database connected successfully.
2025-05-21 16:45:27 [info]: Server is running at port 9000
2025-05-21 16:45:28 [info]: Database connected successfully.
2025-05-21 16:51:43 [info]: Server is running at port 9000
2025-05-21 16:51:48 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 14:34:04 [info]: Server is running at port 9000
2025-05-22 14:34:06 [info]: Database connected successfully.
2025-05-22 14:50:16 [info]: Server is running at port 9000
2025-05-22 14:50:18 [info]: Database connected successfully.
2025-05-22 14:52:32 [info]: Server is running at port 9000
2025-05-22 14:52:34 [info]: Database connected successfully.
2025-05-22 14:53:48 [info]: Server is running at port 9000
2025-05-22 14:53:50 [info]: Database connected successfully.
2025-05-22 14:53:52 [info]: Server is running at port 9000
2025-05-22 14:53:54 [info]: Database connected successfully.
2025-05-22 14:54:05 [info]: Server is running at port 9000
2025-05-22 14:54:07 [info]: Database connected successfully.
2025-05-22 14:59:09 [info]: Server is running at port 9000
2025-05-22 14:59:11 [info]: Database connected successfully.
2025-05-22 15:04:35 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-22 15:04:41 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-22 15:07:13 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=-100","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:12:35)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:43)"}
2025-05-22 15:07:37 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=10&page=0","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:61:55\n\n  58 }\n  59 \n  60 async getAllEnrolledUsers(courseId: string, pagination: { skip: number, limit: number }) {\nâ†’ 61   const enrollments = await prisma.courseEnrollment.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -10\")","status":500,"stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:61:55\n\n  58 }\n  59 \n  60 async getAllEnrolledUsers(courseId: string, pagination: { skip: number, limit: number }) {\nâ†’ 61   const enrollments = await prisma.courseEnrollment.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -10\")\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7649)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:61:25)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:47:25)"}
2025-05-22 15:09:04 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=10&page=-10","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Number must be greater than or equal to 0\",\n    \"path\": [\n      \"page\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Number must be greater than or equal to 0\",\n    \"path\": [\n      \"page\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:12:35)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:43)"}
2025-05-22 15:09:14 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=-100","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:12:35)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:43)"}
2025-05-22 15:12:32 [error]: {"method":"GET","url":"/api/v1/user/verify?token=043b154421c8eec73ab9d2c861a7675c27501a61386ea50d60b7c6cb56559ec6","message":"Invalid or expired verification token.","status":400,"stack":"Error: Invalid or expired verification token.\n    at UserService.verifyEmail (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:79:13)\n    at async verifyEmail (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:47:5)"}
2025-05-22 15:13:34 [error]: {"method":"GET","url":"/api/v1/user/viewCourses/8024e008-421d-4d49-a23f-3bebd06ef31","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-22 15:13:43 [error]: {"method":"GET","url":"/api/v1/user/viewCourses/8024e008-421d-4d49-a23f-3bebd06ef312","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-22 15:14:08 [error]: {"method":"POST","url":"/api/v1/user/enroll","message":"You are already enrolled in this course","status":400,"stack":"Error: You are already enrolled in this course\n    at EnrollmentService.enroll (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:43:13)\n    at async enroll (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:23:24)"}
2025-05-22 15:14:28 [error]: {"method":"POST","url":"/api/v1/course/create-module","message":"\nInvalid `prisma.module.create()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:95:32\n\n  92   );\n  93 }\n  94 \nâ†’ 95 return await prisma.module.create(\nForeign key constraint violated: `Module_courseId_fkey (index)`","status":500,"stack":"PrismaClientKnownRequestError: \nInvalid `prisma.module.create()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:95:32\n\n  92   );\n  93 }\n  94 \nâ†’ 95 return await prisma.module.create(\nForeign key constraint violated: `Module_courseId_fkey (index)`\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async CourseService.createModule (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:95:12)\n    at async createModule (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseController.ts:98:20)"}
2025-05-22 15:18:43 [error]: {"method":"GET","url":"/api/v1/user/viewCourses/8024e008-421d-4d49-a23f-3bebd06ef312","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-22 15:19:37 [error]: {"method":"GET","url":"/api/v1/user/viewCourses/a865ead6-9d8a-4561-90e6-755fb2b2346f","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-22 15:39:55 [info]: Server is running at port 9000
2025-05-22 15:40:00 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 15:40:14 [info]: Server is running at port 9000
2025-05-22 15:40:16 [info]: Database connected successfully.
2025-05-22 15:41:21 [info]: Server is running at port 9000
2025-05-22 15:41:22 [info]: Database connected successfully.
2025-05-22 15:41:30 [info]: Server is running at port 9000
2025-05-22 15:41:31 [info]: Database connected successfully.
2025-05-22 15:48:44 [info]: Server is running at port 9000
2025-05-22 15:48:46 [info]: Database connected successfully.
2025-05-22 15:48:56 [info]: Server is running at port 9000
2025-05-22 15:48:57 [info]: Database connected successfully.
2025-05-22 15:51:50 [info]: Server is running at port 9000
2025-05-22 15:51:52 [info]: Database connected successfully.
2025-05-22 15:53:27 [info]: Server is running at port 9000
2025-05-22 15:53:29 [info]: Database connected successfully.
2025-05-22 15:53:45 [info]: Server is running at port 9000
2025-05-22 15:53:47 [info]: Database connected successfully.
2025-05-22 15:54:17 [info]: Server is running at port 9000
2025-05-22 15:54:19 [info]: Database connected successfully.
2025-05-22 15:54:35 [info]: Server is running at port 9000
2025-05-22 15:54:37 [info]: Database connected successfully.
2025-05-22 15:54:46 [info]: Server is running at port 9000
2025-05-22 15:54:47 [info]: Database connected successfully.
2025-05-22 15:54:55 [info]: Server is running at port 9000
2025-05-22 15:54:57 [info]: Database connected successfully.
2025-05-22 15:55:01 [info]: Server is running at port 9000
2025-05-22 15:55:03 [info]: Database connected successfully.
2025-05-22 15:56:47 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=-100&page=-10","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Number must be greater than or equal to 0\",\n    \"path\": [\n      \"page\"\n    ]\n  },\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Number must be greater than or equal to 0\",\n    \"path\": [\n      \"page\"\n    ]\n  },\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:10:35)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:43)"}
2025-05-22 15:58:50 [info]: Server is running at port 9000
2025-05-22 15:58:55 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 15:59:12 [info]: Server is running at port 9000
2025-05-22 15:59:13 [info]: Database connected successfully.
2025-05-22 15:59:59 [info]: Server is running at port 9000
2025-05-22 16:00:01 [info]: Database connected successfully.
2025-05-22 16:04:37 [info]: Server is running at port 9000
2025-05-22 16:04:39 [info]: Database connected successfully.
2025-05-22 16:05:29 [info]: Server is running at port 9000
2025-05-22 16:05:30 [info]: Database connected successfully.
2025-05-22 16:06:38 [info]: Server is running at port 9000
2025-05-22 16:06:40 [info]: Database connected successfully.
2025-05-22 16:07:35 [info]: Server is running at port 9000
2025-05-22 16:07:37 [info]: Database connected successfully.
2025-05-22 16:11:45 [info]: Server is running at port 9000
2025-05-22 16:11:50 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 16:12:29 [info]: Server is running at port 9000
2025-05-22 16:12:31 [info]: Database connected successfully.
2025-05-22 16:13:28 [info]: Server is running at port 9000
2025-05-22 16:13:30 [info]: Database connected successfully.
2025-05-22 16:15:16 [info]: Server is running at port 9000
2025-05-22 16:15:18 [info]: Database connected successfully.
2025-05-22 16:15:34 [info]: Server is running at port 9000
2025-05-22 16:15:36 [info]: Database connected successfully.
2025-05-22 16:16:00 [info]: Server is running at port 9000
2025-05-22 16:16:02 [info]: Database connected successfully.
2025-05-22 16:17:39 [info]: Server is running at port 9000
2025-05-22 16:17:44 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 16:18:12 [info]: Server is running at port 9000
2025-05-22 16:18:14 [info]: Database connected successfully.
2025-05-22 16:18:26 [info]: Server is running at port 9000
2025-05-22 16:18:27 [info]: Database connected successfully.
2025-05-22 16:22:11 [info]: Server is running at port 9000
2025-05-22 16:22:16 [info]: Server is running at port 9000
2025-05-22 16:22:17 [info]: Database connected successfully.
2025-05-22 16:24:44 [info]: Server is running at port 9000
2025-05-22 16:24:49 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 16:25:13 [info]: Server is running at port 9000
2025-05-22 16:25:23 [info]: Server is running at port 9000
2025-05-22 16:25:25 [info]: Database connected successfully.
2025-05-22 16:29:09 [info]: Server is running at port 9000
2025-05-22 16:29:10 [info]: Database connected successfully.
2025-05-22 16:38:10 [info]: Server is running at port 9000
2025-05-22 16:38:11 [info]: Database connected successfully.
2025-05-22 16:38:56 [info]: Server is running at port 9000
2025-05-22 16:38:58 [info]: Database connected successfully.
2025-05-22 16:39:18 [info]: Server is running at port 9000
2025-05-22 16:39:21 [info]: Database connected successfully.
2025-05-22 16:48:20 [info]: Server is running at port 9000
2025-05-22 16:48:22 [info]: Database connected successfully.
2025-05-22 16:48:56 [info]: Server is running at port 9000
2025-05-22 16:48:57 [info]: Database connected successfully.
2025-05-22 16:49:13 [info]: Server is running at port 9000
2025-05-22 16:49:15 [info]: Database connected successfully.
2025-05-22 16:49:39 [info]: Server is running at port 9000
2025-05-22 16:49:42 [info]: Database connected successfully.
2025-05-22 16:49:45 [info]: Server is running at port 9000
2025-05-22 16:49:47 [info]: Database connected successfully.
2025-05-22 16:50:10 [info]: Server is running at port 9000
2025-05-22 16:50:13 [info]: Database connected successfully.
2025-05-22 16:53:48 [info]: Server is running at port 9000
2025-05-22 16:53:50 [info]: Database connected successfully.
2025-05-22 16:54:24 [info]: Server is running at port 9000
2025-05-22 16:54:25 [info]: Database connected successfully.
2025-05-22 16:54:44 [info]: Server is running at port 9000
2025-05-22 16:54:45 [info]: Database connected successfully.
2025-05-22 16:56:12 [info]: Server is running at port 9000
2025-05-22 16:56:14 [info]: Database connected successfully.
2025-05-22 16:57:49 [info]: Server is running at port 9000
2025-05-22 16:57:51 [info]: Database connected successfully.
2025-05-22 16:57:57 [info]: Server is running at port 9000
2025-05-22 16:57:59 [info]: Database connected successfully.
2025-05-22 16:59:50 [info]: Server is running at port 9000
2025-05-22 16:59:52 [info]: Database connected successfully.
2025-05-22 17:00:44 [info]: Server is running at port 9000
2025-05-22 17:00:46 [info]: Database connected successfully.
2025-05-23 11:18:44 [info]: Server is running at port 9000
2025-05-23 11:18:46 [info]: Database connected successfully.
2025-05-23 11:18:51 [info]: Server is running at port 9000
2025-05-23 11:18:52 [info]: Database connected successfully.
2025-05-23 11:19:33 [info]: Server is running at port 9000
2025-05-23 11:19:34 [info]: Database connected successfully.
2025-05-23 11:24:54 [info]: Server is running at port 9000
2025-05-23 11:24:56 [info]: Database connected successfully.
2025-05-23 11:26:15 [info]: Server is running at port 9000
2025-05-23 11:26:16 [info]: Database connected successfully.
2025-05-23 11:26:27 [info]: Server is running at port 9000
2025-05-23 11:26:29 [info]: Database connected successfully.
2025-05-23 11:26:56 [info]: Server is running at port 9000
2025-05-23 11:28:01 [info]: Server is running at port 9000
2025-05-23 11:28:02 [info]: Database connected successfully.
2025-05-23 11:31:27 [info]: Server is running at port 9000
2025-05-23 11:31:29 [info]: Database connected successfully.
2025-05-23 11:32:03 [info]: Server is running at port 9000
2025-05-23 11:32:05 [info]: Database connected successfully.
2025-05-23 11:32:19 [info]: Server is running at port 9000
2025-05-23 11:32:21 [info]: Database connected successfully.
2025-05-23 11:32:28 [info]: Server is running at port 9000
2025-05-23 11:32:29 [info]: Database connected successfully.
2025-05-23 11:34:18 [info]: Server is running at port 9000
2025-05-23 11:35:48 [info]: Server is running at port 9000
2025-05-23 11:35:49 [info]: Database connected successfully.
2025-05-23 11:36:05 [info]: Server is running at port 9000
2025-05-23 11:36:07 [info]: Database connected successfully.
2025-05-23 11:38:27 [info]: Server is running at port 9000
2025-05-23 11:38:29 [info]: Database connected successfully.
2025-05-23 11:38:34 [info]: Server is running at port 9000
2025-05-23 11:38:36 [info]: Database connected successfully.
2025-05-23 11:39:26 [info]: Server is running at port 9000
2025-05-23 11:39:28 [info]: Database connected successfully.
2025-05-23 11:40:02 [info]: Server is running at port 9000
2025-05-23 11:40:04 [info]: Database connected successfully.
2025-05-23 11:56:00 [info]: Server is running at port 9000
2025-05-23 11:56:02 [info]: Database connected successfully.
2025-05-23 11:57:03 [error]: {"method":"POST","url":"/api/v1/course/create","message":"Course with this title already exists","status":400,"stack":"Error: Course with this title already exists\n    at CourseService.createCourse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:31:13)\n    at async createCourse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseController.ts:26:20)"}
2025-05-23 11:58:19 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-23 11:58:49 [error]: {"method":"POST","url":"/api/v1/user/enroll","message":"You are already enrolled in this course","status":400,"stack":"Error: You are already enrolled in this course\n    at EnrollmentService.enroll (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:44:13)\n    at async enroll (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:23:24)"}
2025-05-23 11:59:14 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-23 11:59:24 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-23 12:02:08 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=-100&page=-10","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Page must be a positive number\",\n    \"path\": [\n      \"page\"\n    ]\n  },\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Limit must be a positive number\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Page must be a positive number\",\n    \"path\": [\n      \"page\"\n    ]\n  },\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Limit must be a positive number\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:9:35)\n    at EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:65:45)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:49)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\validators\\paramValidator.ts:20:7\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)"}
2025-05-23 12:06:50 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=-10&page=2","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Limit must be a positive number\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Limit must be a positive number\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:9:35)\n    at EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:65:45)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:49)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\validators\\paramValidator.ts:20:7\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)"}
2025-05-23 12:10:29 [info]: Server is running at port 9000
2025-05-23 12:10:30 [info]: Database connected successfully.
2025-05-23 12:10:53 [info]: Server is running at port 9000
2025-05-23 12:10:54 [info]: Database connected successfully.
2025-05-23 12:11:10 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=-10&page=2","message":"Limit must be a positive number","status":500,"stack":{"errors":[{"path":"limit","message":"Limit must be a positive number"}]}}
2025-05-23 12:11:24 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=10&page=-2","message":"Page must be a positive number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a positive number"}]}}
2025-05-23 12:11:41 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=anc&page=ksdfkl","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:14:30 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=anc","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:14:39 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:17:41 [info]: Server is running at port 9000
2025-05-23 12:17:42 [info]: Database connected successfully.
2025-05-23 12:17:47 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?sdfsdf","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:17:52 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:18:23 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=-100&page=200","message":"Limit must be a positive number","status":500,"stack":{"errors":[{"path":"limit","message":"Limit must be a positive number"}]}}
2025-05-23 12:27:37 [info]: Server is running at port 9000
2025-05-23 12:27:39 [info]: Database connected successfully.
2025-05-23 12:30:20 [info]: Server is running at port 9000
2025-05-23 12:30:21 [info]: Database connected successfully.
2025-05-23 12:31:21 [info]: Server is running at port 9000
2025-05-23 12:31:23 [info]: Database connected successfully.
2025-05-23 12:31:41 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=sdf1&page=5df","message":"page: Page must be a number, limit: limit must be a number","status":500}
2025-05-23 12:40:38 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=10000&page=3","message":"limit: Let's not fetch more than 100","status":500}
2025-05-23 12:41:16 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"page: Page must be a number, limit: limit must be a number","status":500}
2025-05-23 12:41:41 [info]: Server is running at port 9000
2025-05-23 12:41:43 [info]: Database connected successfully.
2025-05-23 12:54:30 [info]: Server is running at port 9000
2025-05-23 12:54:32 [info]: Database connected successfully.
2025-05-23 12:54:45 [info]: Server is running at port 9000
2025-05-23 12:54:47 [info]: Database connected successfully.
2025-05-23 12:55:16 [info]: Server is running at port 9000
2025-05-23 12:55:16 [info]: Server is running at port 9000
2025-05-23 12:55:18 [info]: Database connected successfully.
2025-05-23 12:55:18 [info]: Database connected successfully.
2025-05-23 12:56:08 [info]: Server is running at port 9000
2025-05-23 12:56:08 [info]: Server is running at port 9000
2025-05-23 12:56:15 [info]: Server is running at port 9000
2025-05-23 12:56:15 [info]: Server is running at port 9000
2025-05-23 12:56:17 [info]: Database connected successfully.
2025-05-23 12:56:17 [info]: Database connected successfully.
2025-05-23 12:56:32 [info]: Server is running at port 9000
2025-05-23 12:56:32 [info]: Server is running at port 9000
2025-05-23 12:56:34 [info]: Database connected successfully.
2025-05-23 12:56:34 [info]: Database connected successfully.
2025-05-23 12:57:02 [info]: Server is running at port 9000
2025-05-23 12:57:02 [info]: Server is running at port 9000
2025-05-23 12:57:04 [info]: Database connected successfully.
2025-05-23 12:57:04 [info]: Database connected successfully.
2025-05-23 12:58:42 [info]: Server is running at port 9000
2025-05-23 12:58:42 [info]: Server is running at port 9000
2025-05-23 12:58:44 [info]: Database connected successfully.
2025-05-23 12:58:44 [info]: Database connected successfully.
2025-05-23 12:59:00 [info]: Server is running at port 9000
2025-05-23 12:59:00 [info]: Server is running at port 9000
2025-05-23 12:59:02 [info]: Database connected successfully.
2025-05-23 12:59:02 [info]: Database connected successfully.
2025-05-23 12:59:39 [info]: Server is running at port 9000
2025-05-23 12:59:39 [info]: Server is running at port 9000
2025-05-23 12:59:41 [info]: Database connected successfully.
2025-05-23 12:59:41 [info]: Database connected successfully.
2025-05-23 13:43:58 [info]: Server is running at port 9000
2025-05-23 13:43:58 [info]: Server is running at port 9000
2025-05-23 13:44:00 [info]: Database connected successfully.
2025-05-23 13:44:00 [info]: Database connected successfully.
2025-05-23 13:44:07 [info]: Server is running at port 9000
2025-05-23 13:44:07 [info]: Server is running at port 9000
2025-05-23 13:44:12 [info]: Server is running at port 9000
2025-05-23 13:44:12 [info]: Server is running at port 9000
2025-05-23 13:44:13 [info]: Database connected successfully.
2025-05-23 13:44:13 [info]: Database connected successfully.
2025-05-23 13:47:15 [info]: Server is running at port 9000
2025-05-23 13:47:15 [info]: Server is running at port 9000
2025-05-23 13:47:17 [info]: Database connected successfully.
2025-05-23 13:47:17 [info]: Database connected successfully.
2025-05-23 13:47:22 [info]: Server is running at port 9000
2025-05-23 13:47:22 [info]: Server is running at port 9000
2025-05-23 13:47:24 [info]: Database connected successfully.
2025-05-23 13:47:24 [info]: Database connected successfully.
2025-05-23 13:50:48 [info]: Server is running at port 9000
2025-05-23 13:50:50 [info]: Database connected successfully.
2025-05-23 13:51:15 [info]: Server is running at port 9000
2025-05-23 13:51:17 [info]: Database connected successfully.
2025-05-23 13:51:23 [info]: Server is running at port 9000
2025-05-23 13:51:24 [info]: Database connected successfully.
2025-05-23 13:51:28 [info]: Server is running at port 9000
2025-05-23 13:51:30 [info]: Database connected successfully.
2025-05-23 13:51:35 [info]: Server is running at port 9000
2025-05-23 13:51:37 [info]: Database connected successfully.
2025-05-23 13:57:28 [info]: Server is running at port 9000
2025-05-23 13:57:30 [info]: Database connected successfully.
2025-05-23 13:58:21 [info]: Server is running at port 9000
2025-05-23 13:58:23 [info]: Database connected successfully.
2025-05-23 13:58:35 [info]: Server is running at port 9000
2025-05-23 13:58:36 [info]: Database connected successfully.
2025-05-23 13:58:47 [info]: Server is running at port 9000
2025-05-23 13:58:48 [info]: Database connected successfully.
2025-05-23 13:58:52 [info]: Server is running at port 9000
2025-05-23 13:58:53 [info]: Database connected successfully.
2025-05-23 13:58:59 [info]: Server is running at port 9000
2025-05-23 13:59:00 [info]: Database connected successfully.
2025-05-23 13:59:22 [info]: Server is running at port 9000
2025-05-23 13:59:24 [info]: Database connected successfully.
2025-05-23 13:59:34 [info]: Server is running at port 9000
2025-05-23 13:59:36 [info]: Database connected successfully.
2025-05-23 14:00:09 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:37\n\n  112 const { skip, limit, page } = pagination(query);\n  113 \n  114 const [enrollments, count] = await Promise.all([\nâ†’ 115   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          skip: 0,\n          take: \"1\",\n                ~~~\n          orderBy: {\n            createdAt: \"desc\"\n          }\n        })\n\nArgument `take`: Invalid value provided. Expected Int, provided String.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:37\n\n  112 const { skip, limit, page } = pagination(query);\n  113 \n  114 const [enrollments, count] = await Promise.all([\nâ†’ 115   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          skip: 0,\n          take: \"1\",\n                ~~~\n          orderBy: {\n            createdAt: \"desc\"\n          }\n        })\n\nArgument `take`: Invalid value provided. Expected Int, provided String.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:00:28 [info]: Server is running at port 9000
2025-05-23 14:00:35 [info]: Server is running at port 9000
2025-05-23 14:00:38 [info]: Server is running at port 9000
2025-05-23 14:00:40 [info]: Database connected successfully.
2025-05-23 14:01:24 [info]: Server is running at port 9000
2025-05-23 14:01:29 [info]: Server is running at port 9000
2025-05-23 14:01:30 [info]: Database connected successfully.
2025-05-23 14:01:32 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:37\n\n  112 const { skip, limit, page } = pagination(query);\n  113 \n  114 const [enrollments, count] = await Promise.all([\nâ†’ 115   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          skip: 0,\n          take: \"1\",\n                ~~~\n          orderBy: {\n            createdAt: \"desc\"\n          }\n        })\n\nArgument `take`: Invalid value provided. Expected Int, provided String.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:37\n\n  112 const { skip, limit, page } = pagination(query);\n  113 \n  114 const [enrollments, count] = await Promise.all([\nâ†’ 115   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          skip: 0,\n          take: \"1\",\n                ~~~\n          orderBy: {\n            createdAt: \"desc\"\n          }\n        })\n\nArgument `take`: Invalid value provided. Expected Int, provided String.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:35)"}
2025-05-23 14:01:52 [info]: Server is running at port 9000
2025-05-23 14:01:54 [info]: Database connected successfully.
2025-05-23 14:02:19 [info]: Server is running at port 9000
2025-05-23 14:02:20 [info]: Database connected successfully.
2025-05-23 14:02:33 [info]: Server is running at port 9000
2025-05-23 14:02:43 [info]: Server is running at port 9000
2025-05-23 14:02:44 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-23 14:02:57 [info]: Server is running at port 9000
2025-05-23 14:03:02 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-23 14:03:23 [info]: Server is running at port 9000
2025-05-23 14:03:28 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-23 14:04:23 [info]: Server is running at port 9000
2025-05-23 14:04:23 [info]: Database connected successfully.
2025-05-23 14:04:30 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          take: 1,\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          take: 1,\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:07:05 [info]: Server is running at port 9000
2025-05-23 14:07:05 [info]: Database connected successfully.
2025-05-23 14:07:22 [info]: Server is running at port 9000
2025-05-23 14:07:22 [info]: Database connected successfully.
2025-05-23 14:07:28 [info]: Server is running at port 9000
2025-05-23 14:07:28 [info]: Database connected successfully.
2025-05-23 14:07:32 [info]: Server is running at port 9000
2025-05-23 14:07:32 [info]: Database connected successfully.
2025-05-23 14:07:37 [info]: Server is running at port 9000
2025-05-23 14:07:37 [info]: Database connected successfully.
2025-05-23 14:07:42 [info]: Server is running at port 9000
2025-05-23 14:07:42 [info]: Database connected successfully.
2025-05-23 14:08:03 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:09:14 [info]: Server is running at port 9000
2025-05-23 14:09:14 [info]: Database connected successfully.
2025-05-23 14:09:23 [info]: Server is running at port 9000
2025-05-23 14:09:23 [info]: Database connected successfully.
2025-05-23 14:15:04 [info]: Server is running at port 9000
2025-05-23 14:15:04 [info]: Database connected successfully.
2025-05-23 14:15:08 [info]: Server is running at port 9000
2025-05-23 14:15:08 [info]: Database connected successfully.
2025-05-23 14:15:12 [info]: Server is running at port 9000
2025-05-23 14:15:12 [info]: Database connected successfully.
2025-05-23 14:15:55 [info]: Server is running at port 9000
2025-05-23 14:15:55 [info]: Database connected successfully.
2025-05-23 14:16:01 [info]: Server is running at port 9000
2025-05-23 14:16:01 [info]: Database connected successfully.
2025-05-23 14:19:14 [info]: Server is running at port 9000
2025-05-23 14:19:14 [info]: Database connected successfully.
2025-05-23 14:20:19 [info]: Server is running at port 9000
2025-05-23 14:20:20 [info]: Database connected successfully.
2025-05-23 14:21:03 [info]: Server is running at port 9000
2025-05-23 14:21:03 [info]: Database connected successfully.
2025-05-23 14:21:22 [info]: Server is running at port 9000
2025-05-23 14:21:22 [info]: Database connected successfully.
2025-05-23 14:21:27 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:21:44 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:21:53 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:22:56 [info]: Server is running at port 9000
2025-05-23 14:22:56 [info]: Database connected successfully.
2025-05-23 14:23:06 [info]: Server is running at port 9000
2025-05-23 14:23:06 [info]: Database connected successfully.
2025-05-23 14:23:15 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:23:44 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:32:25 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:33:37 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:33:43 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:33:52 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?page=6","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:34:43 [info]: Server is running at port 9000
2025-05-23 14:34:43 [info]: Database connected successfully.
2025-05-23 14:35:07 [info]: Server is running at port 9000
2025-05-23 14:35:07 [info]: Database connected successfully.
2025-05-23 14:35:53 [info]: Server is running at port 9000
2025-05-23 14:35:53 [info]: Database connected successfully.
2025-05-23 14:35:57 [info]: Server is running at port 9000
2025-05-23 14:35:57 [info]: Database connected successfully.
2025-05-23 14:36:39 [info]: Server is running at port 9000
2025-05-23 14:36:39 [info]: Database connected successfully.
2025-05-23 14:36:44 [info]: Server is running at port 9000
2025-05-23 14:36:45 [info]: Database connected successfully.
2025-05-23 14:36:48 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?page=6","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:39:32 [info]: Server is running at port 9000
2025-05-23 14:39:32 [info]: Database connected successfully.
2025-05-23 14:39:36 [info]: Server is running at port 9000
2025-05-23 14:39:36 [info]: Database connected successfully.
2025-05-23 14:39:48 [info]: Server is running at port 9000
2025-05-23 14:39:48 [info]: Database connected successfully.
2025-05-23 14:40:22 [info]: Server is running at port 9000
2025-05-23 14:40:22 [info]: Database connected successfully.
2025-05-23 14:40:30 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?page=6","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:40:42 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:40:49 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\nâ†’ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:43:17 [info]: Server is running at port 9000
2025-05-23 14:43:17 [info]: Database connected successfully.
2025-05-23 14:43:21 [info]: Server is running at port 9000
2025-05-23 14:43:21 [info]: Database connected successfully.
2025-05-23 14:43:27 [info]: Server is running at port 9000
2025-05-23 14:43:27 [info]: Database connected successfully.
2025-05-23 14:43:29 [info]: Server is running at port 9000
2025-05-23 14:43:29 [info]: Database connected successfully.
2025-05-23 14:43:43 [info]: Server is running at port 9000
2025-05-23 14:43:43 [info]: Database connected successfully.
2025-05-23 14:43:48 [info]: Server is running at port 9000
2025-05-23 14:43:48 [info]: Database connected successfully.
2025-05-23 14:43:53 [info]: Server is running at port 9000
2025-05-23 14:43:53 [info]: Database connected successfully.
2025-05-23 14:43:56 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\nâ†’ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\nâ†’ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:53:30 [info]: Server is running at port 9000
2025-05-23 14:53:30 [info]: Database connected successfully.
2025-05-23 14:53:33 [info]: Server is running at port 9000
2025-05-23 14:53:33 [info]: Database connected successfully.
2025-05-23 14:54:01 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\nâ†’ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\nâ†’ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:59:35 [info]: Server is running at port 9000
2025-05-23 14:59:35 [info]: Database connected successfully.
2025-05-23 14:59:39 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\nâ†’ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\nâ†’ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:48:35)"}
2025-05-23 15:00:28 [info]: Server is running at port 9000
2025-05-23 15:00:28 [info]: Database connected successfully.
2025-05-23 15:00:36 [info]: Server is running at port 9000
2025-05-23 15:00:36 [info]: Database connected successfully.
2025-05-23 15:00:57 [info]: Server is running at port 9000
2025-05-23 15:00:57 [info]: Database connected successfully.
2025-05-23 15:01:28 [info]: Server is running at port 9000
2025-05-23 15:01:28 [info]: Database connected successfully.
2025-05-23 15:01:31 [info]: Server is running at port 9000
2025-05-23 15:01:31 [info]: Database connected successfully.
2025-05-23 15:01:38 [info]: Server is running at port 9000
2025-05-23 15:01:38 [info]: Database connected successfully.
2025-05-23 15:03:02 [info]: Server is running at port 9000
2025-05-23 15:03:02 [info]: Database connected successfully.
2025-05-23 15:03:37 [info]: Server is running at port 9000
2025-05-23 15:03:37 [info]: Database connected successfully.
2025-05-23 15:03:53 [info]: Server is running at port 9000
2025-05-23 15:03:53 [info]: Database connected successfully.
2025-05-23 15:04:23 [info]: Server is running at port 9000
2025-05-23 15:04:23 [info]: Database connected successfully.
2025-05-23 15:04:47 [info]: Server is running at port 9000
2025-05-23 15:04:47 [info]: Database connected successfully.
2025-05-23 15:04:55 [info]: Server is running at port 9000
2025-05-23 15:04:55 [info]: Database connected successfully.
2025-05-23 15:05:01 [info]: Server is running at port 9000
2025-05-23 15:05:01 [info]: Database connected successfully.
2025-05-23 15:06:46 [info]: Server is running at port 9000
2025-05-23 15:06:46 [info]: Database connected successfully.
2025-05-23 15:07:20 [info]: Server is running at port 9000
2025-05-23 15:07:20 [info]: Database connected successfully.
2025-05-23 15:07:24 [info]: Server is running at port 9000
2025-05-23 15:07:24 [info]: Database connected successfully.
2025-05-23 15:07:31 [info]: Server is running at port 9000
2025-05-23 15:07:31 [info]: Database connected successfully.
2025-05-23 15:08:04 [info]: Server is running at port 9000
2025-05-23 15:08:04 [info]: Database connected successfully.
2025-05-23 15:08:41 [info]: Server is running at port 9000
2025-05-23 15:08:42 [info]: Database connected successfully.
2025-05-23 15:08:57 [info]: Server is running at port 9000
2025-05-23 15:08:57 [info]: Database connected successfully.
2025-05-23 15:09:00 [info]: Server is running at port 9000
2025-05-23 15:09:00 [info]: Database connected successfully.
2025-05-23 15:09:08 [info]: Server is running at port 9000
2025-05-23 15:09:08 [info]: Database connected successfully.
2025-05-23 15:09:11 [info]: Server is running at port 9000
2025-05-23 15:09:11 [info]: Database connected successfully.
2025-05-23 15:09:14 [info]: Server is running at port 9000
2025-05-23 15:09:14 [info]: Database connected successfully.
2025-05-23 15:10:05 [info]: Server is running at port 9000
2025-05-23 15:10:05 [info]: Database connected successfully.
2025-05-23 15:10:43 [info]: Server is running at port 9000
2025-05-23 15:10:43 [info]: Database connected successfully.
2025-05-23 15:10:59 [info]: Server is running at port 9000
2025-05-23 15:11:00 [info]: Database connected successfully.
2025-05-23 15:11:05 [info]: Server is running at port 9000
2025-05-23 15:11:05 [info]: Database connected successfully.
2025-05-23 15:11:16 [info]: Server is running at port 9000
2025-05-23 15:11:16 [info]: Database connected successfully.
2025-05-23 15:11:23 [info]: Server is running at port 9000
2025-05-23 15:11:23 [info]: Database connected successfully.
2025-05-23 15:11:39 [info]: Server is running at port 9000
2025-05-23 15:11:39 [info]: Database connected successfully.
2025-05-23 15:11:49 [info]: Server is running at port 9000
2025-05-23 15:11:49 [info]: Database connected successfully.
2025-05-23 15:11:58 [info]: Server is running at port 9000
2025-05-23 15:11:58 [info]: Database connected successfully.
2025-05-23 15:12:02 [info]: Server is running at port 9000
2025-05-23 15:12:02 [info]: Database connected successfully.
2025-05-23 15:12:09 [info]: Server is running at port 9000
2025-05-23 15:12:09 [info]: Database connected successfully.
2025-05-23 15:12:20 [info]: Server is running at port 9000
2025-05-23 15:12:20 [info]: Database connected successfully.
2025-05-23 15:12:30 [info]: Server is running at port 9000
2025-05-23 15:12:30 [info]: Database connected successfully.
2025-05-23 15:12:51 [info]: Server is running at port 9000
2025-05-23 15:12:51 [info]: Database connected successfully.
2025-05-23 15:12:54 [info]: Server is running at port 9000
2025-05-23 15:12:54 [info]: Database connected successfully.
2025-05-23 15:13:29 [info]: Server is running at port 9000
2025-05-23 15:13:30 [info]: Database connected successfully.
2025-05-23 15:13:44 [info]: Server is running at port 9000
2025-05-23 15:13:44 [info]: Database connected successfully.
2025-05-23 15:14:06 [info]: Server is running at port 9000
2025-05-23 15:14:06 [info]: Database connected successfully.
2025-05-23 15:14:09 [info]: Server is running at port 9000
2025-05-23 15:14:09 [info]: Database connected successfully.
2025-05-23 15:14:15 [info]: Server is running at port 9000
2025-05-23 15:14:15 [info]: Database connected successfully.
2025-05-23 15:14:21 [info]: Server is running at port 9000
2025-05-23 15:14:21 [info]: Database connected successfully.
2025-05-23 15:14:40 [info]: Server is running at port 9000
2025-05-23 15:14:40 [info]: Database connected successfully.
2025-05-23 15:14:55 [info]: Server is running at port 9000
2025-05-23 15:14:55 [info]: Database connected successfully.
2025-05-23 15:14:59 [info]: Server is running at port 9000
2025-05-23 15:15:00 [info]: Database connected successfully.
2025-05-23 15:15:08 [info]: Server is running at port 9000
2025-05-23 15:15:08 [info]: Database connected successfully.
2025-05-23 15:34:59 [info]: Server is running at port 9000
2025-05-23 15:34:59 [info]: Database connected successfully.
