2025-05-19 15:47:15 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-20 14:30:20 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-20 14:30:26 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-21 16:10:46 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-21 16:51:48 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 15:04:35 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-22 15:04:41 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-22 15:07:13 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=-100","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:12:35)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:43)"}
2025-05-22 15:07:37 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=10&page=0","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:61:55\n\n  58 }\n  59 \n  60 async getAllEnrolledUsers(courseId: string, pagination: { skip: number, limit: number }) {\n→ 61   const enrollments = await prisma.courseEnrollment.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -10\")","status":500,"stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:61:55\n\n  58 }\n  59 \n  60 async getAllEnrolledUsers(courseId: string, pagination: { skip: number, limit: number }) {\n→ 61   const enrollments = await prisma.courseEnrollment.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -10\")\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7649)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:61:25)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:47:25)"}
2025-05-22 15:09:04 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=10&page=-10","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Number must be greater than or equal to 0\",\n    \"path\": [\n      \"page\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Number must be greater than or equal to 0\",\n    \"path\": [\n      \"page\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:12:35)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:43)"}
2025-05-22 15:09:14 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=-100","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:12:35)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:43)"}
2025-05-22 15:12:32 [error]: {"method":"GET","url":"/api/v1/user/verify?token=043b154421c8eec73ab9d2c861a7675c27501a61386ea50d60b7c6cb56559ec6","message":"Invalid or expired verification token.","status":400,"stack":"Error: Invalid or expired verification token.\n    at UserService.verifyEmail (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:79:13)\n    at async verifyEmail (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:47:5)"}
2025-05-22 15:13:34 [error]: {"method":"GET","url":"/api/v1/user/viewCourses/8024e008-421d-4d49-a23f-3bebd06ef31","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-22 15:13:43 [error]: {"method":"GET","url":"/api/v1/user/viewCourses/8024e008-421d-4d49-a23f-3bebd06ef312","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-22 15:14:08 [error]: {"method":"POST","url":"/api/v1/user/enroll","message":"You are already enrolled in this course","status":400,"stack":"Error: You are already enrolled in this course\n    at EnrollmentService.enroll (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:43:13)\n    at async enroll (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:23:24)"}
2025-05-22 15:14:28 [error]: {"method":"POST","url":"/api/v1/course/create-module","message":"\nInvalid `prisma.module.create()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:95:32\n\n  92   );\n  93 }\n  94 \n→ 95 return await prisma.module.create(\nForeign key constraint violated: `Module_courseId_fkey (index)`","status":500,"stack":"PrismaClientKnownRequestError: \nInvalid `prisma.module.create()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:95:32\n\n  92   );\n  93 }\n  94 \n→ 95 return await prisma.module.create(\nForeign key constraint violated: `Module_courseId_fkey (index)`\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async CourseService.createModule (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:95:12)\n    at async createModule (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseController.ts:98:20)"}
2025-05-22 15:18:43 [error]: {"method":"GET","url":"/api/v1/user/viewCourses/8024e008-421d-4d49-a23f-3bebd06ef312","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-22 15:19:37 [error]: {"method":"GET","url":"/api/v1/user/viewCourses/a865ead6-9d8a-4561-90e6-755fb2b2346f","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-22 15:40:00 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 15:56:47 [error]: {"method":"GET","url":"/api/v1/course/enroll/39c7875d-5d2d-4e9e-a406-47d9461b726a?limit=-100&page=-10","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Number must be greater than or equal to 0\",\n    \"path\": [\n      \"page\"\n    ]\n  },\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Number must be greater than or equal to 0\",\n    \"path\": [\n      \"page\"\n    ]\n  },\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 0,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Can't fetch nothing\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:10:35)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:43)"}
2025-05-22 15:58:55 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 16:11:50 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 16:17:44 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-22 16:24:49 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-23 11:57:03 [error]: {"method":"POST","url":"/api/v1/course/create","message":"Course with this title already exists","status":400,"stack":"Error: Course with this title already exists\n    at CourseService.createCourse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:31:13)\n    at async createCourse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseController.ts:26:20)"}
2025-05-23 11:58:19 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-23 11:58:49 [error]: {"method":"POST","url":"/api/v1/user/enroll","message":"You are already enrolled in this course","status":400,"stack":"Error: You are already enrolled in this course\n    at EnrollmentService.enroll (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:44:13)\n    at async enroll (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:23:24)"}
2025-05-23 11:59:14 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-23 11:59:24 [error]: {"method":"POST","url":"/api/v1/user/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:31:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-23 12:02:08 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=-100&page=-10","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Page must be a positive number\",\n    \"path\": [\n      \"page\"\n    ]\n  },\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Limit must be a positive number\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Page must be a positive number\",\n    \"path\": [\n      \"page\"\n    ]\n  },\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Limit must be a positive number\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:9:35)\n    at EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:65:45)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:49)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\validators\\paramValidator.ts:20:7\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)"}
2025-05-23 12:06:50 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=-10&page=2","message":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Limit must be a positive number\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]","status":500,"stack":"ZodError: [\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"type\": \"number\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"Limit must be a positive number\",\n    \"path\": [\n      \"limit\"\n    ]\n  }\n]\n    at Object.get error [as error] (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\zod\\lib\\types.js:131:22)\n    at pagination (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\pagination\\pagination.ts:9:35)\n    at EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:65:45)\n    at getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:49)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\utils\\validators\\paramValidator.ts:20:7\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)"}
2025-05-23 12:11:10 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=-10&page=2","message":"Limit must be a positive number","status":500,"stack":{"errors":[{"path":"limit","message":"Limit must be a positive number"}]}}
2025-05-23 12:11:24 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=10&page=-2","message":"Page must be a positive number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a positive number"}]}}
2025-05-23 12:11:41 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=anc&page=ksdfkl","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:14:30 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=anc","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:14:39 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:17:47 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?sdfsdf","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:17:52 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"Page must be a number","status":500,"stack":{"errors":[{"path":"page","message":"Page must be a number"},{"path":"limit","message":"limit must be a number"}]}}
2025-05-23 12:18:23 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=-100&page=200","message":"Limit must be a positive number","status":500,"stack":{"errors":[{"path":"limit","message":"Limit must be a positive number"}]}}
2025-05-23 12:31:41 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=sdf1&page=5df","message":"page: Page must be a number, limit: limit must be a number","status":500}
2025-05-23 12:40:38 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=10000&page=3","message":"limit: Let's not fetch more than 100","status":500}
2025-05-23 12:41:16 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"page: Page must be a number, limit: limit must be a number","status":500}
2025-05-23 14:00:09 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:37\n\n  112 const { skip, limit, page } = pagination(query);\n  113 \n  114 const [enrollments, count] = await Promise.all([\n→ 115   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          skip: 0,\n          take: \"1\",\n                ~~~\n          orderBy: {\n            createdAt: \"desc\"\n          }\n        })\n\nArgument `take`: Invalid value provided. Expected Int, provided String.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:37\n\n  112 const { skip, limit, page } = pagination(query);\n  113 \n  114 const [enrollments, count] = await Promise.all([\n→ 115   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          skip: 0,\n          take: \"1\",\n                ~~~\n          orderBy: {\n            createdAt: \"desc\"\n          }\n        })\n\nArgument `take`: Invalid value provided. Expected Int, provided String.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:01:32 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:37\n\n  112 const { skip, limit, page } = pagination(query);\n  113 \n  114 const [enrollments, count] = await Promise.all([\n→ 115   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          skip: 0,\n          take: \"1\",\n                ~~~\n          orderBy: {\n            createdAt: \"desc\"\n          }\n        })\n\nArgument `take`: Invalid value provided. Expected Int, provided String.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:37\n\n  112 const { skip, limit, page } = pagination(query);\n  113 \n  114 const [enrollments, count] = await Promise.all([\n→ 115   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          skip: 0,\n          take: \"1\",\n                ~~~\n          orderBy: {\n            createdAt: \"desc\"\n          }\n        })\n\nArgument `take`: Invalid value provided. Expected Int, provided String.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:115:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:45:35)"}
2025-05-23 14:02:44 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-23 14:03:02 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-23 14:03:28 [error]: ERROR CONNECTING DATABASE: Can't reach database server at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`

Please make sure your database server is running at `dpg-d0gpmobe5dus73aiqdh0-a.oregon-postgres.render.com:5432`.
2025-05-23 14:04:30 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          take: 1,\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          take: 1,\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:08:03 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:21:27 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:21:44 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:21:53 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?limit=1","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          take: 1,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:23:15 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:23:44 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:32:25 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:33:37 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:33:43 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:33:52 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?page=6","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:36:48 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?page=6","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:40:30 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?page=6","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:40:42 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a?","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:40:49 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:37\n\n  113 const { skip, limit, page } = pagination(query);\n  114 \n  115 const [enrollments, count] = await Promise.all([\n→ 116   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:116:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:43:56 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\n→ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\n→ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:54:01 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\n→ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\n→ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:44:35)"}
2025-05-23 14:59:39 [error]: {"method":"GET","url":"/api/v1/course/enroll/13c34b6e-348b-4ff2-8de2-a75a47925d5a","message":"\nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\n→ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.courseEnrollment.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:37\n\n  115 console.log(skip,limit, page);\n  116 \n  117 const [enrollments, count] = await Promise.all([\n→ 118   await prisma.courseEnrollment.findMany({\n          where: {\n            courseId: \"13c34b6e-348b-4ff2-8de2-a75a47925d5a\"\n          },\n          skip: NaN,\n          select: {\n            user: {\n              select: {\n                id: true,\n                email: true\n              }\n            },\n            course: {\n              select: {\n                id: true,\n                title: true,\n                duration: true,\n                period: true,\n                module: {\n                  select: {\n                    id: true,\n                    title: true\n                  }\n                }\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async EnrollmentService.getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentService.ts:118:7)\n    at async getAllEnrolledUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\enrollment\\enrollmentController.ts:48:35)"}
2025-05-23 16:53:44 [error]: {"method":"GET","url":"/api/v1/user/getallusers?limit=-8888&page=5","message":"\nInvalid `prisma.user.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:107:23\n\n  104 \n  105 \n  106 const [users, count] = await Promise.all([\n→ 107   await prisma.user.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -35552\")","status":500,"stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.user.findMany()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:107:23\n\n  104 \n  105 \n  106 const [users, count] = await Promise.all([\n→ 107   await prisma.user.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -35552\")\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7649)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async UserService.getAllRegisteredUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:107:5)\n    at async getAllRegisteredUsers (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:43:27)"}
2025-05-26 09:32:23 [error]: {"method":"POST","url":"/api/v1/course/create","message":"Course with this title already exists","status":400,"stack":"Error: Course with this title already exists\n    at CourseService.createCourse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:31:13)\n    at async createCourse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseController.ts:26:20)"}
2025-05-26 12:11:49 [error]: {"method":"GET","url":"/api/v1/user/profile","message":"User not found","status":404,"stack":"Error: User not found\n    at UserService.getUserWithProfile (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:258:13)\n    at async getUserWithProfile (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:198:18)"}
2025-05-26 12:29:27 [error]: {"method":"GET","url":"/api/v1/user/5bf2ed0a-365b-4692-bd23-ca8b58186657","message":"\nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:156:37\n\n  153 }\n  154 \n  155 async getUserById(userId: string) {\n→ 156    const user = await prisma.user.findUnique({\n           where: {\n             id: undefined,\n         ?   email?: String,\n         ?   username?: String,\n         ?   AND?: UserWhereInput | UserWhereInput[],\n         ?   OR?: UserWhereInput[],\n         ?   NOT?: UserWhereInput | UserWhereInput[],\n         ?   password?: StringFilter | String,\n         ?   role?: EnumUserRoleFilter | UserRole,\n         ?   isEmailVerified?: BoolFilter | Boolean,\n         ?   verificationToken?: StringNullableFilter | String | Null,\n         ?   verificationTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   resetToken?: StringNullableFilter | String | Null,\n         ?   resetTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   profile?: ProfileNullableScalarRelationFilter | ProfileWhereInput | Null,\n         ?   courses?: CourseListRelationFilter,\n         ?   courseEnrollments?: CourseEnrollmentListRelationFilter\n           },\n           select: {\n             id: true,\n             username: true,\n             email: true,\n             role: true,\n             isEmailVerified: true,\n             profile: {\n               select: {\n                 bio: true,\n                 image: true\n               }\n             },\n             createdAt: true,\n             updatedAt: true\n           }\n         })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `username` arguments. Available options are marked with ?.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:156:37\n\n  153 }\n  154 \n  155 async getUserById(userId: string) {\n→ 156    const user = await prisma.user.findUnique({\n           where: {\n             id: undefined,\n         ?   email?: String,\n         ?   username?: String,\n         ?   AND?: UserWhereInput | UserWhereInput[],\n         ?   OR?: UserWhereInput[],\n         ?   NOT?: UserWhereInput | UserWhereInput[],\n         ?   password?: StringFilter | String,\n         ?   role?: EnumUserRoleFilter | UserRole,\n         ?   isEmailVerified?: BoolFilter | Boolean,\n         ?   verificationToken?: StringNullableFilter | String | Null,\n         ?   verificationTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   resetToken?: StringNullableFilter | String | Null,\n         ?   resetTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   profile?: ProfileNullableScalarRelationFilter | ProfileWhereInput | Null,\n         ?   courses?: CourseListRelationFilter,\n         ?   courseEnrollments?: CourseEnrollmentListRelationFilter\n           },\n           select: {\n             id: true,\n             username: true,\n             email: true,\n             role: true,\n             isEmailVerified: true,\n             profile: {\n               select: {\n                 bio: true,\n                 image: true\n               }\n             },\n             createdAt: true,\n             updatedAt: true\n           }\n         })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `username` arguments. Available options are marked with ?.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async UserService.getUserById (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:156:19)\n    at async getUserById (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:73:18)"}
2025-05-26 12:31:29 [error]: {"method":"GET","url":"/api/v1/user/5bf2ed0a-365b-4692-bd23-ca8b58186657","message":"\nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:156:37\n\n  153 }\n  154 \n  155 async getUserById(userId: string) {\n→ 156    const user = await prisma.user.findUnique({\n           where: {\n             id: undefined,\n         ?   email?: String,\n         ?   username?: String,\n         ?   AND?: UserWhereInput | UserWhereInput[],\n         ?   OR?: UserWhereInput[],\n         ?   NOT?: UserWhereInput | UserWhereInput[],\n         ?   password?: StringFilter | String,\n         ?   role?: EnumUserRoleFilter | UserRole,\n         ?   isEmailVerified?: BoolFilter | Boolean,\n         ?   verificationToken?: StringNullableFilter | String | Null,\n         ?   verificationTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   resetToken?: StringNullableFilter | String | Null,\n         ?   resetTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   profile?: ProfileNullableScalarRelationFilter | ProfileWhereInput | Null,\n         ?   courses?: CourseListRelationFilter,\n         ?   courseEnrollments?: CourseEnrollmentListRelationFilter\n           },\n           select: {\n             id: true,\n             username: true,\n             email: true,\n             role: true,\n             isEmailVerified: true,\n             profile: {\n               select: {\n                 bio: true,\n                 image: true\n               }\n             },\n             createdAt: true,\n             updatedAt: true\n           }\n         })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `username` arguments. Available options are marked with ?.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:156:37\n\n  153 }\n  154 \n  155 async getUserById(userId: string) {\n→ 156    const user = await prisma.user.findUnique({\n           where: {\n             id: undefined,\n         ?   email?: String,\n         ?   username?: String,\n         ?   AND?: UserWhereInput | UserWhereInput[],\n         ?   OR?: UserWhereInput[],\n         ?   NOT?: UserWhereInput | UserWhereInput[],\n         ?   password?: StringFilter | String,\n         ?   role?: EnumUserRoleFilter | UserRole,\n         ?   isEmailVerified?: BoolFilter | Boolean,\n         ?   verificationToken?: StringNullableFilter | String | Null,\n         ?   verificationTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   resetToken?: StringNullableFilter | String | Null,\n         ?   resetTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   profile?: ProfileNullableScalarRelationFilter | ProfileWhereInput | Null,\n         ?   courses?: CourseListRelationFilter,\n         ?   courseEnrollments?: CourseEnrollmentListRelationFilter\n           },\n           select: {\n             id: true,\n             username: true,\n             email: true,\n             role: true,\n             isEmailVerified: true,\n             profile: {\n               select: {\n                 bio: true,\n                 image: true\n               }\n             },\n             createdAt: true,\n             updatedAt: true\n           }\n         })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `username` arguments. Available options are marked with ?.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async UserService.getUserById (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:156:19)\n    at async getUserById (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:73:18)"}
2025-05-26 12:35:25 [error]: {"method":"GET","url":"/api/v1/user/5bf2ed0a-365b-4692-bd23-ca8b58186657","message":"\nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:129:37\n\n  126 }\n  127 \n  128 async getUserById(userId: string) {\n→ 129    const user = await prisma.user.findUnique({\n           where: {\n             id: undefined,\n         ?   email?: String,\n         ?   username?: String,\n         ?   AND?: UserWhereInput | UserWhereInput[],\n         ?   OR?: UserWhereInput[],\n         ?   NOT?: UserWhereInput | UserWhereInput[],\n         ?   password?: StringFilter | String,\n         ?   role?: EnumUserRoleFilter | UserRole,\n         ?   isEmailVerified?: BoolFilter | Boolean,\n         ?   verificationToken?: StringNullableFilter | String | Null,\n         ?   verificationTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   resetToken?: StringNullableFilter | String | Null,\n         ?   resetTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   profile?: ProfileNullableScalarRelationFilter | ProfileWhereInput | Null,\n         ?   courses?: CourseListRelationFilter,\n         ?   courseEnrollments?: CourseEnrollmentListRelationFilter\n           },\n           select: {\n             id: true,\n             username: true,\n             email: true,\n             role: true,\n             isEmailVerified: true,\n             profile: {\n               select: {\n                 bio: true,\n                 image: true\n               }\n             },\n             createdAt: true,\n             updatedAt: true\n           }\n         })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `username` arguments. Available options are marked with ?.","status":500,"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:129:37\n\n  126 }\n  127 \n  128 async getUserById(userId: string) {\n→ 129    const user = await prisma.user.findUnique({\n           where: {\n             id: undefined,\n         ?   email?: String,\n         ?   username?: String,\n         ?   AND?: UserWhereInput | UserWhereInput[],\n         ?   OR?: UserWhereInput[],\n         ?   NOT?: UserWhereInput | UserWhereInput[],\n         ?   password?: StringFilter | String,\n         ?   role?: EnumUserRoleFilter | UserRole,\n         ?   isEmailVerified?: BoolFilter | Boolean,\n         ?   verificationToken?: StringNullableFilter | String | Null,\n         ?   verificationTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   resetToken?: StringNullableFilter | String | Null,\n         ?   resetTokenExpires?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   profile?: ProfileNullableScalarRelationFilter | ProfileWhereInput | Null,\n         ?   courses?: CourseListRelationFilter,\n         ?   courseEnrollments?: CourseEnrollmentListRelationFilter\n           },\n           select: {\n             id: true,\n             username: true,\n             email: true,\n             role: true,\n             isEmailVerified: true,\n             profile: {\n               select: {\n                 bio: true,\n                 image: true\n               }\n             },\n             createdAt: true,\n             updatedAt: true\n           }\n         })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `username` arguments. Available options are marked with ?.\n    at An (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async UserService.getUserById (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:129:19)\n    at async getUserById (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:73:18)"}
2025-05-26 16:09:27 [error]: {"method":"POST","url":"/api/v1/user/auth/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:32:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-26 16:12:38 [error]: {"method":"PATCH","url":"/api/v1/user/auth/change-password","message":"Old password is incorrect","status":400,"stack":"Error: Old password is incorrect\n    at UserService.changePassword (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:197:13)\n    at async changePassword (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:147:5)"}
2025-05-27 11:19:08 [error]: {"method":"POST","url":"/api/v1/user/enrollment/enroll","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-27 11:23:11 [error]: {"method":"GET","url":"/api/v1/user/enrollment/courses/d107de6b-f813-4279-b7c2-7a466c82cb36?limit=2&page=1","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-27 11:23:33 [error]: {"method":"POST","url":"/api/v1/user/auth/login","message":"Invalid credentials","status":401,"stack":"Error: Invalid credentials\n    at UserService.login (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:164:13)\n    at async loginUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:121:18)"}
2025-05-27 11:24:56 [error]: {"method":"POST","url":"/api/v1/user/auth/login","message":"Invalid credentials","status":401,"stack":"Error: Invalid credentials\n    at UserService.login (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:159:13)\n    at async loginUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:121:18)"}
2025-05-27 12:51:09 [error]: {"method":"POST","url":"/api/v1/user/auth/login","message":"Invalid credentials","status":401,"stack":"Error: Invalid credentials\n    at UserService.login (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:159:13)\n    at async loginUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:121:18)"}
2025-05-27 12:51:26 [error]: {"method":"POST","url":"/api/v1/user/auth/login","message":"Invalid credentials","status":401,"stack":"Error: Invalid credentials\n    at UserService.login (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:159:13)\n    at async loginUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:121:18)"}
2025-05-27 12:51:52 [error]: {"method":"POST","url":"/api/v1/user/auth/login","message":"Invalid credentials","status":401,"stack":"Error: Invalid credentials\n    at UserService.login (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:159:13)\n    at async loginUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:121:18)"}
2025-05-27 12:52:20 [error]: {"method":"POST","url":"/api/v1/user/auth/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:32:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-27 12:54:05 [error]: {"method":"POST","url":"/api/v1/user/auth/register","message":"Email or username already exist","status":400,"stack":"Error: Email or username already exist\n    at UserService.register (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:32:13)\n    at async registerUser (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:24:18)"}
2025-05-27 12:55:43 [error]: {"method":"POST","url":"/api/v1/course/create","message":"Forbidden","status":403,"stack":"Error: Forbidden\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\rolemiddleware.ts:32:15"}
2025-05-27 13:43:19 [error]: {"method":"PATCH","url":"/api/v1/course/update/9e6fb260-835b-4bfb-8948-44bf0320383f","message":"\nInvalid `prisma.course.update()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:63:47\n\n  60 ) {\n  61   await this._getCourse(courseId, instructorId);\n  62 \n→ 63   const updatedCourse = await prisma.course.update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","status":500,"stack":"PrismaClientKnownRequestError: \nInvalid `prisma.course.update()` invocation in\nC:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:63:47\n\n  60 ) {\n  61   await this._getCourse(courseId, instructorId);\n  62 \n→ 63   const updatedCourse = await prisma.course.update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at zn.handleRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at zn.handleAndLogRequestError (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at zn.request (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async CourseService.updateCourse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:63:27)\n    at async updateCourse (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseController.ts:51:22)"}
2025-05-27 13:47:03 [error]: {"method":"POST","url":"/api/v1/course/create-module","message":"Module with this title already exists in the course","status":400,"stack":"Error: Module with this title already exists in the course\n    at CourseService.createModule (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:89:13)\n    at async createModule (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseController.ts:98:20)"}
2025-05-27 13:47:42 [error]: {"method":"POST","url":"/api/v1/course/create-module","message":"Module with this title already exists in the course","status":400,"stack":"Error: Module with this title already exists in the course\n    at CourseService.createModule (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseService.ts:89:13)\n    at async createModule (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\course\\courseController.ts:98:20)"}
2025-05-27 16:08:21 [error]: {"method":"GET","url":"/api/v1/user/enrollment/courses/d107de6b-f813-4279-b7c2-7a466c82cb36?limit=2&page=4","message":"Invalid or expired token","status":401,"stack":"Error: Invalid or expired token\n    at authMiddleware (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\authMiddleware.ts:49:12)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:295:15\n    at param (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:600:14)\n    at param (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:610:14)\n    at processParams (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:664:3)"}
2025-05-27 16:08:45 [error]: {"method":"GET","url":"/api/v1/user/enrollment/courses/d107de6b-f813-4279-b7c2-7a466c82cb36?limit=2&page=4","message":"Invalid or expired token","status":401,"stack":"Error: Invalid or expired token\n    at authMiddleware (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\authMiddleware.ts:49:12)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:295:15\n    at param (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:600:14)\n    at param (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:610:14)\n    at processParams (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:664:3)"}
2025-05-27 16:09:33 [error]: {"method":"GET","url":"/api/v1/user/enrollment/courses/d107de6b-f813-4279-b7c2-7a466c82cb36?limit=2&page=4","message":"Invalid or expired token","status":401,"stack":"Error: Invalid or expired token\n    at authMiddleware (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\authMiddleware.ts:49:12)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:295:15\n    at param (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:600:14)\n    at param (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:610:14)\n    at processParams (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:664:3)"}
2025-05-27 16:10:06 [error]: {"method":"POST","url":"/api/v1/user/enrollment/enroll","message":"Invalid or expired token","status":401,"stack":"Error: Invalid or expired token\n    at authMiddleware (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\authMiddleware.ts:49:12)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:291:5)\n    at Function.handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:186:3)"}
2025-05-27 16:11:23 [error]: {"method":"GET","url":"/api/v1/user/enrollment/viewCourses/a865ead6-9d8a-4561-90e6-755fb2b2346f","message":"Invalid or expired token","status":401,"stack":"Error: Invalid or expired token\n    at authMiddleware (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\authMiddleware.ts:49:12)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:295:15\n    at param (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:600:14)\n    at param (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:610:14)\n    at processParams (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:664:3)"}
2025-05-27 16:18:14 [error]: {"method":"POST","url":"/api/v1/course/create","message":"Invalid or expired token","status":401,"stack":"Error: Invalid or expired token\n    at authMiddleware (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\authMiddleware.ts:49:12)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:291:5)\n    at Function.handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:186:3)"}
2025-05-27 16:19:04 [error]: {"method":"POST","url":"/api/v1/course/create","message":"Invalid or expired token","status":401,"stack":"Error: Invalid or expired token\n    at authMiddleware (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\authMiddleware.ts:49:12)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:291:5)\n    at Function.handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:186:3)"}
2025-05-27 16:19:09 [error]: {"method":"POST","url":"/api/v1/course/create","message":"Invalid or expired token","status":401,"stack":"Error: Invalid or expired token\n    at authMiddleware (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\middleware\\authMiddleware.ts:49:12)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:291:5)\n    at Function.handle (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\node_modules\\router\\index.js:186:3)"}
2025-05-27 16:21:25 [error]: {"method":"GET","url":"/api/v1/user/auth/verify?token=ba4b3ac46adc4a35c4355021565b7cffee116cc9481c672357fce0c02f01087f","message":"Invalid or expired verification token.","status":400,"stack":"Error: Invalid or expired verification token.\n    at UserService.verifyEmail (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\service.ts:80:13)\n    at async verifyEmail (C:\\Users\\user\\OneDrive - Amazing IT Centre\\Desktop\\Course_Management_System\\src\\modules\\user\\controller.ts:100:5)"}
